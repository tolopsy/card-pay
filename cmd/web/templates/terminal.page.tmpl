{{template "base" .}}

{{define "title"}}
    Payment Virtual Terminal
{{end}}

{{define "content"}}
<h2 class="mt-3 text-center">Payment Virtual Terminal</h2>
<hr>

<div class="alert alert-danger text-center d-none" id="card-messages"></div>
<form action="/payment-successful" method="post" name="payment_form" id="payment_form"
    class="d-block needs-validation payment-form" autocomplete="off" novalidate>
    <div class="mb-3">
        <label for="amount" class="form-label">Amount</label>
        <input type="text" class="form-control" id="amount" name="amount" required>
    </div>
     <div class="mb-3">
        <label for="cardholder-name" class="form-label">Cardholder Name</label>
        <input type="text" class="form-control" id="cardholder-name" name="cardholder_name" required>
    </div>
     <div class="mb-3">
        <label for="cardholder-email" class="form-label">Cardholder Email</label>
        <input type="email" class="form-control" id="cardholder-email" name="cardholder_email" required>
    </div>

    <div class="mb-3">
        <label for="card-element" class="form-label">Credit Card</label>
        <div id="card-element" class="form-control"></div>
        <div class="alert-danger text-center" id="card-errors" role="alert"></div>
        <div class="alert-success text-center" id="card-success" role="alert"></div>
    </div>
    <hr>
    <a id="pay-button" href="javascript:void(0)" class="btn btn-primary" onclick="val()">Charge Card</a>
    <div id="processing-payment" class="text-center d-none">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
    <input type="hidden" name="payment_intent" id="payment_intent">
    <input type="hidden" name="payment_method" id="payment_method">
    <input type="hidden" name="payment_amount" id="payment_amount">
    <input type="hidden" name="payment_currency" id="payment_currency">
</form>
{{end}}

{{define "js"}}
<script src="https://js.stripe.com/v3/"></script>
<script>
    let card, stripe;
    const cardMessages = document.getElementById("card-messages")
    const payButton = document.getElementById("pay-button")
    const processing = document.getElementById("processing-payment")
    stripe = Stripe({{index .StringMap "publishable_key"}});
    function showProcessingSpinner(toShow=false) {
        if (toShow) {
            processing.classList.remove("d-none")
        } else if (!toShow) {
            processing.classList.add("d-none")
        }
    }

    function hidePayButton() {
        payButton.classList.add("d-none")
        showProcessingSpinner(true)
    }

    function showPayButton() {
        payButton.classList.remove("d-none")
        showProcessingSpinner(false)
    }

    function showCardError(msg) {
        cardMessages.classList.add("alert-danger")
        cardMessages.classList.remove("alert-success")
        cardMessages.classList.remove("d-none")
        cardMessages.innerText = msg
    }

    function showCardSuccess() {
        cardMessages.classList.remove("alert-danger")
        cardMessages.classList.add("alert-success")
        cardMessages.classList.remove("d-none")
        cardMessages.innerText = "Transaction Successful"
    }

    function val(){
        let form = document.getElementById("payment_form")
        if (form.checkValidity() === false) {
            this.event.preventDefault()
            this.event.stopPropagation()
            form.classList.add("was-validated")
            return
        }
        form.classList.add("was-validated")
        hidePayButton()

        // parse amount
        let amountToCharge = String(parseFloat(document.getElementById("amount").value) * 100)
        let payload = {
            amount: amountToCharge,
            currency: 'usd',
        }

        const requestOptions = {
            method: 'post',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(payload),
        }

        fetch("{{.API}}/api/payment-intent", requestOptions)
            .then(response => response.text())
            .then(response => {
                let data;
                try {
                    data = JSON.parse(response);
                    stripe.confirmCardPayment(data.client_secret, {
                        payment_method: {
                            card: card,
                            billing_details: {
                                name: document.getElementById("cardholder-name").value,
                            }
                        }
                    }).then(function(result) {
                        if (result.error) {
                            // something went wrong
                            showCardError(result.error.message)
                            showPayButton()
                        } else if (result.paymentIntent) {
                            if (result.paymentIntent.status === "succeeded") {
                                // card has been charged
                                document.getElementById("payment_method").value = result.paymentIntent.payment_method_types[0]
                                document.getElementById("payment_intent").value = result.paymentIntent.id
                                document.getElementById("payment_amount").value = result.paymentIntent.amount
                                document.getElementById("payment_currency").value = result.paymentIntent.currency
                                showProcessingSpinner(false)
                                showCardSuccess()
                                // submit form here
                                form.submit()
                            }
                        }
                    })
                } catch (err) {
                    console.log(err)
                    showCardError("Invalid response from payment gateway")
                    showPayButton()
                }
            })
    }
    (function() {
        // create stripe elements
        const elements = stripe.elements();
        const style = {
            base: {
                fontSize: '16px',
                lineHeight: '24px',
            }
        };

        // create card element
        card = elements.create('card', {
            style: style,
            hidePostalCode: true, 
        });
        card.mount('#card-element');

        // check for input errors
        card.addEventListener('change', function(event) {
            var errorDiv = document.getElementById("card-errors")
            if (event.error) {
                errorDiv.classList.remove('d-none')
                errorDiv.textContent = event.error.message
            } else {
                errorDiv.classList.add('d-none')
                errorDiv.textContent = ''
            }
        })
    })();
</script>
{{end}}
